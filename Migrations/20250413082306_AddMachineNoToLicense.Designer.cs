// <auto-generated />
using System;
using MediaPlus.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaPlus.Migrations
{
    [DbContext(typeof(MediaPlusDbContext))]
    [Migration("20250413082306_AddMachineNoToLicense")]
    partial class AddMachineNoToLicense
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediaPlus.DBModels.AdDevice", b =>
                {
                    b.Property<int>("DevicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Devices_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DevicesId"));

                    b.Property<int>("DeviceIsInterrupt")
                        .HasColumnType("int")
                        .HasColumnName("device_is_interrupt");

                    b.Property<int?>("DevicesByUserid")
                        .HasColumnType("int")
                        .HasColumnName("Devices_by_userid");

                    b.Property<DateTime?>("DevicesCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Devices_cdate");

                    b.Property<string>("DevicesCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Devices_cust_code");

                    b.Property<int?>("DevicesGroupid")
                        .HasColumnType("int")
                        .HasColumnName("Devices_groupid");

                    b.Property<string>("DevicesName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Devices_name");

                    b.Property<string>("DevicesOfflinePhoto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Devices_offline_photo");

                    b.Property<int?>("DevicesOnoff")
                        .HasColumnType("int")
                        .HasColumnName("Devices_onoff");

                    b.Property<DateTime?>("DevicesUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Devices_udate");

                    b.HasKey("DevicesId")
                        .HasName("PK_Devices");

                    b.ToTable("Ad_Devices", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.AdGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int?>("GroupByUserid")
                        .HasColumnType("int")
                        .HasColumnName("group_by_userid");

                    b.Property<DateTime?>("GroupCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("group_cdate");

                    b.Property<string>("GroupCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("group_cust_code");

                    b.Property<int?>("GroupIsactive")
                        .HasColumnType("int")
                        .HasColumnName("group_isactive");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("group_name");

                    b.Property<DateTime?>("GroupUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("group_udate");

                    b.HasKey("GroupId")
                        .HasName("PK_ad_groups");

                    b.ToTable("Ad_Groups", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.CustomShow", b =>
                {
                    b.Property<int>("CustomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("custom_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomId"));

                    b.Property<int?>("CustomByuserId")
                        .HasColumnType("int")
                        .HasColumnName("custom_byuser_id");

                    b.Property<DateTime?>("CustomCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("custom_cdate");

                    b.Property<string>("CustomCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("custom_cust_code");

                    b.Property<string>("CustomDeviceId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("custom_device_id")
                        .IsFixedLength();

                    b.Property<TimeSpan?>("CustomFromTime")
                        .HasColumnType("time")
                        .HasColumnName("custom_from_time");

                    b.Property<string>("CustomHtmlCode")
                        .HasColumnType("text")
                        .HasColumnName("custom_html_code");

                    b.Property<int?>("CustomIsactive")
                        .HasColumnType("int")
                        .HasColumnName("custom_isactive");

                    b.Property<int?>("CustomMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("custom_material_id");

                    b.Property<TimeSpan?>("CustomToTime")
                        .HasColumnType("time")
                        .HasColumnName("custom_to_time");

                    b.Property<DateTime?>("CustomUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("custom_udate");

                    b.HasKey("CustomId");

                    b.ToTable("custom_show", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustId"));

                    b.Property<DateTime>("CustCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("cust_cdate");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_code");

                    b.Property<string>("CustEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_email");

                    b.Property<int>("CustIsactive")
                        .HasColumnType("int")
                        .HasColumnName("cust_isactive");

                    b.Property<int?>("CustLicenseCode")
                        .HasColumnType("int")
                        .HasColumnName("cust_License_code");

                    b.Property<string>("CustLogo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_logo");

                    b.Property<string>("CustMobileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_Mobile_no");

                    b.Property<string>("CustNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_name_ar");

                    b.Property<string>("CustNameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_name_en");

                    b.Property<string>("CustTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_tel");

                    b.Property<string>("CustTrNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_tr_no");

                    b.Property<DateTime>("CustUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("cust_udate");

                    b.Property<string>("CustVat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_vat");

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MediaPlus.DBModels.License", b =>
                {
                    b.Property<int>("LicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Lic_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicId"));

                    b.Property<DateTime>("LicCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Lic_cdate");

                    b.Property<string>("LicCustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Lic_cust_code");

                    b.Property<int>("LicDeviceNo")
                        .HasColumnType("int")
                        .HasColumnName("Lic_device_no");

                    b.Property<DateTime>("LicEndAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Lic_end_at");

                    b.Property<int>("LicIsactive")
                        .HasColumnType("int")
                        .HasColumnName("Lic_isactive");

                    b.Property<int>("LicMachineNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("LicStartAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Lic_start_at");

                    b.Property<DateTime>("LicUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Lic_udate");

                    b.Property<int>("LicUserNo")
                        .HasColumnType("int")
                        .HasColumnName("Lic_user_no");

                    b.HasKey("LicId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("MediaPlus.DBModels.MaterialType", b =>
                {
                    b.Property<int>("MtypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mtype_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MtypeId"));

                    b.Property<DateTime?>("MtypeCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("mtype_cdate");

                    b.Property<string>("MtypeCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtype_cust_code");

                    b.Property<int?>("MtypeIsactive")
                        .HasColumnType("int")
                        .HasColumnName("mtype_isactive");

                    b.Property<string>("MtypeNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtype_name_ar");

                    b.Property<string>("MtypeNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtype_name_en");

                    b.Property<string>("MtypeStaticHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mtype_static_html");

                    b.Property<DateTime?>("MtypeUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("mtype_udate");

                    b.Property<int?>("MtypeUserId")
                        .HasColumnType("int")
                        .HasColumnName("mtype_user_id");

                    b.HasKey("MtypeId");

                    b.ToTable("Material_Type", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.RoleWithPermission", b =>
                {
                    b.Property<int>("RwpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rwp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RwpId"));

                    b.Property<int?>("RwpByUserid")
                        .HasColumnType("int")
                        .HasColumnName("rwp_by_userid");

                    b.Property<DateTime?>("RwpCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("rwp_cdate");

                    b.Property<string>("RwpCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rwp_cust_code");

                    b.Property<int?>("RwpPermissionId")
                        .HasColumnType("int")
                        .HasColumnName("rwp_permission_id");

                    b.Property<int?>("RwpRoleId")
                        .HasColumnType("int")
                        .HasColumnName("rwp_role_id");

                    b.Property<DateTime?>("RwpUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("rwp_udate");

                    b.HasKey("RwpId")
                        .HasName("PK_role_with_permission");

                    b.ToTable("Role_With_Permission", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("show_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<int?>("ShowByUserid")
                        .HasColumnType("int")
                        .HasColumnName("show_by_userid");

                    b.Property<DateTime?>("ShowCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_cdate");

                    b.Property<string>("ShowCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_code");

                    b.Property<string>("ShowCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("show_cust_code");

                    b.Property<int?>("ShowIsactive")
                        .HasColumnType("int")
                        .HasColumnName("show_isactive");

                    b.Property<int?>("ShowOrder")
                        .HasColumnType("int")
                        .HasColumnName("show_order");

                    b.Property<int?>("ShowSettingId")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_id");

                    b.Property<int?>("ShowTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("show_template_id");

                    b.Property<int?>("ShowTime")
                        .HasColumnType("int")
                        .HasColumnName("show_time");

                    b.Property<DateTime?>("ShowUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_udate");

                    b.HasKey("ShowId")
                        .HasName("PK_show");

                    b.ToTable("Show", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowContent", b =>
                {
                    b.Property<int>("ContentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Contents_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentsId"));

                    b.Property<int?>("ContentsByUserid")
                        .HasColumnType("int")
                        .HasColumnName("Contents_by_userid");

                    b.Property<DateTime?>("ContentsCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Contents_cdate");

                    b.Property<string>("ContentsCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contents_cust_code");

                    b.Property<int?>("ContentsIsactive")
                        .HasColumnType("int")
                        .HasColumnName("Contents_isactive");

                    b.Property<string>("ContentsShowCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contents_show_code");

                    b.Property<int?>("ContentsShowId")
                        .HasColumnType("int")
                        .HasColumnName("Contents_show_id");

                    b.Property<string>("ContentsTxt")
                        .HasColumnType("text")
                        .HasColumnName("Contents_txt");

                    b.Property<DateTime?>("ContentsUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Contents_udate");

                    b.HasKey("ContentsId")
                        .HasName("PK_show_Contents");

                    b.ToTable("Show_Contents", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowDetail", b =>
                {
                    b.Property<int>("ShowDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("show_details_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowDetailsId"));

                    b.Property<DateTime?>("ShowDetailsCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_details_cdate");

                    b.Property<string>("ShowDetailsCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("show_details_cust_code");

                    b.Property<int?>("ShowDetailsFileId")
                        .HasColumnType("int")
                        .HasColumnName("show_details_file_id");

                    b.Property<int?>("ShowDetailsIsactive")
                        .HasColumnType("int")
                        .HasColumnName("show_details_isactive");

                    b.Property<string>("ShowDetailsShowcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("show_details_showcode");

                    b.Property<int?>("ShowDetailsShowid")
                        .HasColumnType("int")
                        .HasColumnName("show_details_showid");

                    b.Property<DateTime?>("ShowDetailsUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_details_udate");

                    b.Property<int?>("ShowDetailsZoneId")
                        .HasColumnType("int")
                        .HasColumnName("show_details_zone_id");

                    b.HasKey("ShowDetailsId")
                        .HasName("PK_show_details");

                    b.ToTable("Show_Details", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowHtmlcode", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("show_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<int?>("ShowByuserId")
                        .HasColumnType("int")
                        .HasColumnName("show_byuser_id");

                    b.Property<DateTime?>("ShowCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_cdate");

                    b.Property<string>("ShowCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_code");

                    b.Property<string>("ShowCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_cust_code");

                    b.Property<string>("ShowHtmlCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("show_html_code");

                    b.Property<int?>("ShowIsactive")
                        .HasColumnType("int")
                        .HasColumnName("show_isactive");

                    b.Property<int>("ShowSettingId")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_id");

                    b.Property<DateTime?>("ShowUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_udate");

                    b.Property<int?>("ShowUserid")
                        .HasColumnType("int")
                        .HasColumnName("show_userid");

                    b.HasKey("ShowId");

                    b.ToTable("show_htmlcode", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowMaterial", b =>
                {
                    b.Property<int>("MatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatId"));

                    b.Property<int>("MatByuserId")
                        .HasColumnType("int")
                        .HasColumnName("mat_byuser_id");

                    b.Property<DateTime>("MatCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("mat_cdate");

                    b.Property<string>("MatCustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mat_cust_code");

                    b.Property<int?>("MatIsactive")
                        .HasColumnType("int")
                        .HasColumnName("mat_isactive");

                    b.Property<string>("MatPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("mat_path");

                    b.Property<string>("MatShowNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mat_show_name_ar");

                    b.Property<string>("MatShowNameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mat_show_name_en");

                    b.Property<int>("MatTypeId")
                        .HasColumnType("int")
                        .HasColumnName("mat_type_id");

                    b.Property<DateTime?>("MatUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("mat_udate");

                    b.HasKey("MatId")
                        .HasName("PK_show_material");

                    b.ToTable("Show_Material", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowSetting", b =>
                {
                    b.Property<int>("ShowSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("show_setting_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowSettingId"));

                    b.Property<DateTime?>("ShowSettingCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_setting_cdate");

                    b.Property<string>("ShowSettingCustCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("show_setting_cust_code");

                    b.Property<int?>("ShowSettingDeviceId")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_device_id");

                    b.Property<int?>("ShowSettingGroupId")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_group_id");

                    b.Property<int?>("ShowSettingNext")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_next");

                    b.Property<int?>("ShowSettingPresent")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_Present");

                    b.Property<string>("ShowSettingShowcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("show_setting_showcode");

                    b.Property<int?>("ShowSettingTotalView")
                        .HasColumnType("int")
                        .HasColumnName("show_setting_total_view");

                    b.Property<DateTime?>("ShowSettingUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_setting_udate");

                    b.HasKey("ShowSettingId")
                        .HasName("PK_show_setting");

                    b.HasIndex(new[] { "ShowSettingId" }, "IX_show_setting")
                        .IsUnique();

                    b.ToTable("Show_Setting", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowTemplate", b =>
                {
                    b.Property<int>("TempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("temp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TempId"));

                    b.Property<int?>("TempByUserid")
                        .HasColumnType("int")
                        .HasColumnName("temp_by_userid");

                    b.Property<DateTime?>("TempCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("temp_cdate");

                    b.Property<int?>("TempColNo")
                        .HasColumnType("int")
                        .HasColumnName("temp_col_no");

                    b.Property<string>("TempCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("temp_cust_code");

                    b.Property<int?>("TempIsactive")
                        .HasColumnType("int")
                        .HasColumnName("temp_isactive");

                    b.Property<string>("TempNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("temp_name_ar");

                    b.Property<string>("TempNameEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("temp_name_eng");

                    b.Property<int?>("TempRowNo")
                        .HasColumnType("int")
                        .HasColumnName("temp_row_no");

                    b.Property<DateTime?>("TempUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("temp_udate");

                    b.HasKey("TempId")
                        .HasName("PK_showtemplateTable");

                    b.ToTable("Show_Template", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.ShowType", b =>
                {
                    b.Property<int>("ShowTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("show_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowTypeId"));

                    b.Property<int?>("ShowTypeByUserid")
                        .HasColumnType("int")
                        .HasColumnName("show_type_by_userid");

                    b.Property<DateTime?>("ShowTypeCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_type_cdate");

                    b.Property<string>("ShowTypeCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_type_cust_code");

                    b.Property<int?>("ShowTypeIsactive")
                        .HasColumnType("int")
                        .HasColumnName("show_type_isactive");

                    b.Property<string>("ShowTypeNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_type_name_ar");

                    b.Property<string>("ShowTypeNameEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("show_type_name_eng");

                    b.Property<DateTime?>("ShowTypeUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_type_udate");

                    b.HasKey("ShowTypeId")
                        .HasName("PK_show_type");

                    b.ToTable("Show_Type", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.TemplateDetail", b =>
                {
                    b.Property<int>("TempDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("temp_detail");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TempDetail"));

                    b.Property<int?>("TempByUserid")
                        .HasColumnType("int")
                        .HasColumnName("temp_by_userid");

                    b.Property<DateTime?>("TempCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("temp_cdate");

                    b.Property<string>("TempCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("temp_cust_code");

                    b.Property<int?>("TempIsactive")
                        .HasColumnType("int")
                        .HasColumnName("temp_isactive");

                    b.Property<int?>("TempTempId")
                        .HasColumnType("int")
                        .HasColumnName("temp_temp_id");

                    b.Property<DateTime?>("TempUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("temp_udate");

                    b.Property<double?>("TempZoneCode")
                        .HasColumnType("float")
                        .HasColumnName("temp_zone_code");

                    b.Property<int?>("TempZoneFileTypeid")
                        .HasColumnType("int")
                        .HasColumnName("temp_zone_file_typeid");

                    b.Property<int?>("TempZoneHeight")
                        .HasColumnType("int")
                        .HasColumnName("temp_zone_height");

                    b.Property<int?>("TempZoneWidth")
                        .HasColumnType("int")
                        .HasColumnName("temp_zone_width");

                    b.HasKey("TempDetail")
                        .HasName("PK_template_details");

                    b.ToTable("Template_Details", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("UserCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("user_cdate");

                    b.Property<string>("UserCustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_cust_code");

                    b.Property<string>("UserLoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_login_name");

                    b.Property<string>("UserNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name_ar");

                    b.Property<string>("UserNameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name_en");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_password");

                    b.Property<string>("UserPhoto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_photo");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int")
                        .HasColumnName("user_role_id");

                    b.Property<DateTime?>("UserUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("user_udate");

                    b.HasKey("UserId")
                        .HasName("PK_users");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MediaPlus.DBModels.UserPermission", b =>
                {
                    b.Property<int>("PermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("perm_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermId"));

                    b.Property<int?>("PermByUserid")
                        .HasColumnType("int")
                        .HasColumnName("perm_by_userid");

                    b.Property<DateTime?>("PermCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("perm_cdate");

                    b.Property<string>("PermCustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("perm_cust_code");

                    b.Property<int?>("PermIsactive")
                        .HasColumnType("int")
                        .HasColumnName("perm_isactive");

                    b.Property<string>("PermName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("perm_name");

                    b.Property<DateTime?>("PermUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("perm_udate");

                    b.HasKey("PermId")
                        .HasName("PK_upermission");

                    b.ToTable("User_Permission", (string)null);
                });

            modelBuilder.Entity("MediaPlus.DBModels.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("RoleByuserId")
                        .HasColumnType("int")
                        .HasColumnName("role_byuser_id");

                    b.Property<DateTime>("RoleCdate")
                        .HasColumnType("datetime")
                        .HasColumnName("role_cdate");

                    b.Property<string>("RoleCustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_cust_code");

                    b.Property<int?>("RoleIsactive")
                        .HasColumnType("int")
                        .HasColumnName("role_isactive");

                    b.Property<string>("RoleNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name_ar");

                    b.Property<string>("RoleNameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name_en");

                    b.Property<DateTime?>("RoleUdate")
                        .HasColumnType("datetime")
                        .HasColumnName("role_udate");

                    b.HasKey("RoleId")
                        .HasName("PK_user_role");

                    b.ToTable("User_Role", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
