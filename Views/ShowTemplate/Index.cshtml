@using MediaPlus.Services
@using Newtonsoft.Json
@model IEnumerable<ShowTemplateViewModel>

@{
    ViewBag.Title = "قوالب العرض";
    var userObject = Context.Session.GetString("UserObject");
    UserSessionModel currentUser = userObject != null ? JsonConvert.DeserializeObject<UserSessionModel>(userObject) : new UserSessionModel();
}

<!-- BEGIN MAIN CONTENT -->
<div id="content" class="container-fluid mt-3">
    @if (currentUser.UserPermissions.Contains("showtemplate.create"))
    {
        <a asp-action="Create" asp-controller="ShowTemplate" class="btn btn-primary mb-3 float-end">
            @Localizer["addnewhead"] <i class="fa fa-plus ms-1"></i>
        </a>
    }
    <br />
    <br />
    <br />
    <div class="card shadow-sm">
        <div class="card-body p-3">

            @if (TempData["TemplateErrors"] is List<string> errors && errors.Any())
            {
                <div class="alert alert-danger">
                    <ul class="mb-0">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }

            <div class="table-responsive">
                <table id="Datatemplate" class="table table-striped table-hover align-middle text-center">
                    <thead class="table-dark">
                        <tr>
                            <th style="width: 5%;"></th>
                            <th style="width: 5%;">@Localizer["ID"]</th>
                            <th style="width: 20%;">@Localizer["name"]</th>
                            <th style="width: 15%;">@Localizer["customer"]</th>
                            <th style="width: 15%;">@Localizer["username"]</th>
                            <th style="width: 10%;">@Localizer["Col X Row"]</th>
                            <th style="width: 10%;">@Localizer["cdate"]</th>
                            <th style="width: 10%;">@Localizer["udate"]</th>
                            @if (currentUser.UserPermissions.Contains("showtemplate.update"))
                            {
                                <th style="width: 7%;">@Localizer["state"]</th>
                            }
                            @if (currentUser.UserPermissions.Contains("showtemplate.update") || currentUser.UserPermissions.Contains("showtemplate.delete"))
                            {
                                <th style="width: 13%;">@Localizer["actions"]</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ShowTemplate in Model)
                        {
                            <tr>
                                <td></td>
                                <td class="align-middle">@ShowTemplate.TempId</td>
                                <td class="align-middle">
                                    @(ShowTemplate.TempNameAr == "null" ? ShowTemplate.TempNameEng : ShowTemplate.TempNameAr)
                                </td>
                                <td class="align-middle">@ShowTemplate.TempCustomerName</td>
                                <td class="align-middle">@ShowTemplate.TempByUserName</td>
                                <td class="align-middle">@($"{ShowTemplate.TempRowNo} × {ShowTemplate.TempColNo}")</td>
                                <td class="align-middle">@ShowTemplate.TempCdate?.ToString("dd/MM/yyyy")</td>
                                <td class="align-middle">@ShowTemplate.TempUdate?.ToString("dd/MM/yyyy")</td>

                                @if (currentUser.UserPermissions.Contains("showtemplate.update"))
                                {
                                    <td class="align-middle">
                                        @if (ShowTemplate.TempIsactive)
                                        {
                                            <button onclick='ToggleOnAndOff(event,"@ShowTemplate.TempId")' class="btn btn-sm btn-success" controll="ShowTemplate">
                                                @Localizer["on"] <i class="bi bi-power" style="pointer-events: none;"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button onclick='ToggleOnAndOff(event,"@ShowTemplate.TempId")' class="btn btn-sm btn-danger" controll="ShowTemplate">
                                                @Localizer["off"] <i class="bi bi-power" style="pointer-events: none;"></i>
                                            </button>
                                        }
                                    </td>
                                }

                                @if (currentUser.UserPermissions.Contains("showtemplate.update") || currentUser.UserPermissions.Contains("showtemplate.delete"))
                                {
                                    <td class="align-middle">
                                        <div class="d-flex justify-content-center gap-2">
                                            @if (currentUser.UserPermissions.Contains("showtemplate.update"))
                                            {
                                                <a asp-action="Edit" asp-controller="ShowTemplate" asp-route-id="@ShowTemplate.TempId" class="btn btn-primary btn-sm">@Localizer["edit"]</a>
                                            }
                                            @if (currentUser.UserPermissions.Contains("showtemplate.delete"))
                                            {
                                                <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModal" onclick="MoveTheIdToModal_aa(@ShowTemplate.TempId)">
                                                    @Localizer["delete"]
                                                </button>
                                            }
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
@section model{


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-center" id="exampleModalLabel">@Localizer["confirmdelete"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body text-center">
                @Localizer["deletemodalbody"]
            </div>
            <div class="modal-footer">
                    <form id="DeleteForm" asp-action="Delete" asp-controller="ShowTemplate" method="post">
                        <input type="hidden" name="id" id="deleteItemId" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["close"]</button>
                        <button type="submit" class="btn btn-danger">@Localizer["delete"]</button>
                    </form>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    <script>

        function MoveTheIdToModal_aa(id) {
            console.log(id);
            document.getElementById("deleteItemId").value = id;
        }
        function MoveTheIdToModal(CustId) {
            var elem = document.getElementById("DeleteForm");
            var elemValue = elem.getAttribute('action').split('/');
            var newhref = '/' + elemValue[1] + '/' + elemValue[2] + '/' + CustId;
            elem.setAttribute("action", newhref);
        }

        $(document).ready(function () {
            var table = $("#Datatemplate").DataTable({
                pageLength: 50,
                dom: "Bfrtip",
                buttons: [
                    'print',
                    'excelHtml5',
                    {
                        extend: "pdfHtml5",
                        orientation: 'portrait',
                        pageSize: 'A4',
                        exportOptions: {
                            orthogonal: "myExport",
                            columns: [6, 5, 4, 3, 2, 1, 0],
                        },
                        customize: function (doc) {
                            doc.defaultStyle.font = "arial";
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        className: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: '',
                        searchable: false
                    },
                    {
                        targets: 1,
                        orderable: false,
                        searchable: false,
                        visible: false
                    },
                    {
                        targets: "hiddenCols",
                        visible: false,
                        render: function (data, type, row) {
                            if (type === 'myExport') {
                                return data.split(' ').reverse().join(' ');
                            }
                            return data;
                        }
                    }
                ]
            });


            $('#Datatemplate tbody').on('click', 'td.dt-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var id = row.data()[1];

                if (row.child.isShown()) {
                    row.child.hide();
                }
                else {
                    GetNestedData(id).then((res) => {
                        row.child(res).show();
                    });
                }
            });

            async function GetNestedData(id) {
                var NestedData = "<form role='form' action='/ShowTemplate/UpdateTemplatesDetails' method='post'>";
                NestedData += "<div class='row text-center align-items-center'>";

                // عناوين الأعمدة
                NestedData += "<div class='col-md-2'><strong>@Localizer["state"]</strong></div>";
                NestedData += "<div class='col-md-2'><strong>@Localizer["Zone Height %"]</strong></div>";
                NestedData += "<div class='col-md-2'><strong>@Localizer["Zone Width %"]</strong></div>";
                NestedData += "<div class='col-md-2'><strong>@Localizer["Zone Name"]</strong></div>";
                NestedData += "<div class='col-md-2'><strong>@Localizer["Zone Id"]</strong></div>";
                NestedData += "<div class='col-md-1'><strong>#</strong></div>";
                // هنا نضيف الحقل المخفي الذي يحتوي على TempDetail (المعرف الرئيسي)

                NestedData += "</div>"; // نهاية صف العناوين

                $.ajax({
                    url: '/ShowTemplate/GetTemplatesDetails/' + id,
                    type: 'GET',
                    cache: false,
                    async: false,
                    success: function (data) {
                        data.forEach(function (x, i) {
                            NestedData += "<div class='row text-center align-items-center my-2'>";

                            // حالة التفعيل
                            NestedData += `<div class='col-md-2'>`;
                            NestedData += `<input type='checkbox' id='TempDetails_${i}__IsActive' name='TempDetails[${i}].IsActive' class='form-check-input' ${x.tempIsactive ? 'checked' : ''} onclick='toggleState(this, ${i})'/>`;
                            NestedData += `<label for='TempDetails_${i}__IsActive'>${x.tempIsactive == 1 ? '@Localizer["on"]' : '@Localizer["off"]'}</label>`;
                            NestedData += `<input type='hidden' id='TempDetails_${i}__IsActiveHidden' name='TempDetails[${i}].IsActiveHidden' value='${x.tempIsactive ? 1 : 0}' />`;
                            NestedData += "</div>";

                            // ارتفاع المنطقة
                            NestedData += `<div class='col-md-2'><input type='number' id='TempDetails_${i}__TempZoneHeight' name='TempDetails[${i}].TempZoneHeight' class='form-control' value='${x.tempZoneHeight}'/></div>`;

                            // عرض المنطقة
                            NestedData += `<div class='col-md-2'><input type='number' id='TempDetails_${i}__TempZoneWidth' name='TempDetails[${i}].TempZoneWidth' class='form-control' value='${x.tempZoneWidth}'/></div>`;

                            // اسم المنطقة
                            NestedData += `<div class='col-md-2'><input class='form-control' value='Zone ${i + 1}' disabled /></div>`;

                            // كود المنطقة
                            NestedData += `<div class='col-md-2'><input class='form-control' id='TempDetails_${i}__TempZoneCode' name='TempDetails[${i}].TempZoneCode' value='${x.tempZoneCode}' disabled /></div>`;

                            // رقم تسلسلي
                            NestedData += `<div class='col-md-1'><input class='form-control' value='${i + 1}' disabled /></div>`;
                            NestedData += `<input type='hidden' id='TempDetails_${i}__TempDetail' name='TempDetails[${i}].TempDetail' value='${x.tempDetail}' />`;
                            

                            NestedData += "</div>"; // نهاية صف التفاصيل لكل عنصر
                        });
                    }
                });

                NestedData += "<button type='submit' class='btn btn-success mt-3'>Update</button>";
                NestedData += "</form>";

                return NestedData;
            }


            function toggleState(checkbox, index) {
                const isActive = checkbox.checked;
                const hiddenInput = document.getElementById(`TempDetails_${index}__IsActiveHidden`);
                if (hiddenInput) {
                    hiddenInput.value = isActive ? 1 : 0;
                }
            }
        });
    </script>

    <script>
        pdfMake.fonts = {
            arial: {
                normal: 'arial.ttf',
                bold: 'arial.ttf',
                italics: 'arial.ttf',
                bolditalics: 'arial.ttf'
            }
        };
    </script>
}
